<style>
  .method-properties > dt,
  .method-properties > dd {
    padding-top: 5px;
  }
  .sub-table {
    margin-left: 6px;
  }
</style>

<% /************ Title, meta-data and description ************/ %>

<h1><%= marked(title) %></h1>
<hr />

<dl class='dl-horizontal'>
  <% if (typeof(baseUrl) != 'undefined') { %>
    <dt>BaseUrl</dt>
    <dd><code><%= baseUrl %></code></dd>
  <% } %>
</dl>

<%= marked(description) %>

<% /************ Functions Table ************/ %>

<% // Check if we have any function entries
   if (entries.some(function(entry) {return entry.type == 'function';})) { %>
<h3>Functions</h3>

For more information on invoking the API methods described here, see <a href="/manual/apis">Using the APIs</a> in the manual.

<table class='table table-bordered table-responsive'>
  <thead>
    <tr>
      <th>Signature</th>
      <th>Summary</th>
    </tr>
  </thead>
  <tbody>
  <% entries.filter(function(entry) {
      return entry.type == 'function';
    }).forEach(function(entry) {
      var args = entry.args.slice();
      if (entry.input) {
        args.push('payload');
      }
      var retval = 'void';
      if (entry.output) {
        retval = 'result';
      }

      if(entry.query){
        var query = entry.query.slice();
        if(query.length > 0){
          let queryElements = "{" + query.join(", ") + "}";
          args.push(queryElements);
        }
      }
      var signature = entry.name + "(" + args.join(', ') + ") : " + retval;
      var stabilityValue = entry.stability || "unknown";
    %>
     <tr>
      <td><code  class = '<%= stabilityValue %>'><a
                  href='#<%= entry.name %>'
                  title='<%= entry.title%>'><%= signature %></a></code></td>
      <td><%= entry.title %></td>
     </tr>
  <% }); %>
  </tbody>
</table>
<% } %>

<% /************ Exchanges Table ************/ %>

<% // Check if we have any topic-exchanges entries
   if (entries.some(function(entry) {return entry.type == 'topic-exchange';})) { %>
<h3>Exchanges</h3>
<table class='table table-bordered table-responsive'>
  <thead>
    <tr>
      <th>Exchange</th>
      <th>Summary</th>
    </tr>
  </thead>
  <tbody>
  <% entries.filter(function(entry) {
      return entry.type == 'topic-exchange';
    }).forEach(function(entry) {
      var exchange = exchangePrefix + entry.exchange;
    %>
     <tr>
      <td><code><a
                  href='#<%= entry.name %>'
                  title='<%= entry.title%>'><%= exchange %></a></code></td>
      <td><%= entry.title %></td>
     </tr>
  <% }); %>
  </tbody>
</table>
<% } %>

<% /************ Function Entries ************/ %>

<% entries.filter(function(entry) {
    return entry.type == 'function';
  }).forEach(function(entry) {
    var stabilityValue = entry.stability || "unknown";
    var title = marked(entry.title);
    if (entry.stability != "stable") {
      title = title + "(" + entry.stability + ")";
    } %>
  <a name='<%= entry.name %>'></a>
  <hr>
  <h2 class = '<%= stabilityValue %>'><%= title %></h2>
  <dl class='dl-horizontal method-properties'>
    <dt>Method</dt>
    <dd><div class='label label-default'><%= entry.method %></div></dd>
    <dt>Route</dt>
    <dd><code><%= entry.route
      .replace(/[<]/g, '&lt;')
      .replace(/[>]/g, '&gt;')
      .replace(/&lt;/g, '<b>&lt;')
      .replace(/&gt;/g, '&gt;</b>') %></code></dd>
    <% if (entry.scopes) { %>
    <dt>Scopes</dt>
      <dd>
        <%
        entry.scopes.forEach(function(scopeset, index) {
          scopeset.forEach(function(scope, index) {
            %>
            <div class='label label-success'><%=
              scope.replace(/[<]/g, '&lt;')
                   .replace(/[>]/g, '&gt;')
            %></div><%
            if (index != scopeset.length - 1) {
              %><br /><%
            }
          });
          if (index != entry.scopes.length - 1) {
            %><div class="strike"><span>or</span></div><%
          }
        });
        %>
      </dd>
    <% } %>
    <dt>Signature</dt>
    <%
      var args = entry.args.slice();
      if (entry.input) {
        args.push('payload');
      }
      var retval = 'void';
      if (entry.output) {
        retval = 'result';
      }

      if(entry.query){
        var query = entry.query.slice();
        if(query.length > 0){
          let queryElements = "{" + query.join(", ") + "}";
          args.push(queryElements);
        }
      }
      var signature = entry.name + "(" + args.join(', ') + ") : " + retval;
    %>
    <dd><code><%= signature%></code></dd>
    <dt>Stability</dt>
    <dd><code class='<%= stabilityValue %>' ><%= stabilityValue %></code></dd>
  </dl>
  <%= marked(entry.description) %>
  <% if (entry.input) { %>
    <h3>Request Payload</h3>
    <div data-render-schema="<%= entry.input %>"></div>
  <% } %>
  <% if (entry.output) { %>
    <h3>Response Payload</h3>
    <div data-render-schema="<%= entry.output %>"></div>
  <% } %>
  <br>
<% }); %>

<% /************ Exchange Entries ************/ %>

<% entries.filter(function(entry) {
    return entry.type == 'topic-exchange';
  }).forEach(function(entry) { %>
  <a name='<%= entry.name %>'></a>
  <hr>
  <h2><%= marked(entry.title) %></h2>
  <dl class='dl-horizontal method-properties'>
    <dt>Exchange</dt>
    <dd>
      <code><%= exchangePrefix + entry.exchange %></code>
    </dd>
    <dt>Signature</dt>
    <dd>
      <code><%= entry.name %>(routingKeyPattern)</code>
    </dd>
  </dl>
  <%= marked(entry.description) %>
  <h3>Routing Key</h3>
  <table class='table sub-table'>
  <thead>
    <tr>
      <th>Index</th>
      <th>Name</th>
      <th>Summary</th>
      <th></th>
    </tr>
  </thead>
  <tbody>
  <% entry.routingKey.forEach(function(key, index) { %>
     <tr>
      <td><div class='badge badge-default'><%= index %></div></td>
      <td><code><%= key.name %></code></td>
      <td><%= marked(key.summary) %></td>
      <td>
        <% if(key.constant) { %>
        <div class="label label-default"
             data-toggle="tooltip"
             data-placement="left"
             title="This key always assume the value `<%= key.constant%>`, used to allow additional routing key formats.">constant-key</div>
        <% } %>
        <% if(!key.required) { %>
        <div class="label label-info"
             data-toggle="tooltip"
             data-placement="left"
             title="This key takes the value of `_`, if it does not make sense for the event reported">option-key</div>
        <% } %>
        <% if(key.multipleWords) { %>
        <div class="label label-danger"
             data-toggle="tooltip"
             data-placement="left"
             title="This key may container dots `.`, creating multiple sub-keys, match it with `#`">multi-key</div>
        <% } %>
      </td>
     </tr>
  <% }); %>
  </tbody>
  </table>
  <% if (entry.schema) { %>
    <h3>Message Payload</h3>
    <div data-render-schema="<%= entry.schema %>"></div>
  <% } %>
  <br>
<% }); %>
